% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_raster_processing.R
\name{resample_raster}
\alias{resample_raster}
\title{Resample Raster Resolution and/or Extent}
\usage{
resample_raster(
  raster,
  new_extent = NULL,
  new_resolution = NULL,
  method = "bilinear"
)
}
\arguments{
\item{raster}{A terra SpatRaster object to be resampled}

\item{new_extent}{Optional. New spatial extent for the raster. Can be:
\itemize{
\item terra SpatExtent object
\item Numeric vector c(xmin, xmax, ymin, ymax)
\item terra SpatRaster (uses its extent)
\item sf/sfc object (uses its bounding box)
If NULL, uses current extent
}}

\item{new_resolution}{Optional. New resolution in the same units as the
raster's coordinate system. Can be:
\itemize{
\item Single numeric value (same for x and y)
\item Numeric vector c(x_res, y_res) for different x/y resolutions
If NULL, uses current resolution
}}

\item{method}{Character string specifying resampling method. One of:
\itemize{
\item "bilinear" (default): bilinear interpolation, good for continuous data
\item "near": nearest neighbor, good for categorical data
\item "cubic": cubic convolution, smooth for continuous data
\item "lanczos": Lanczos windowed sinc resampling
}}
}
\value{
A terra SpatRaster object with the new resolution and/or extent
}
\description{
Flexible raster resampling function that can change resolution, extent, or both
using terra::resample(). This unified function handles all spatial resampling
needs in a single interface.
}
\examples{
\dontrun{
# Load a raster
r <- terra::rast("workspace/data/analyzed/shipping_night_light_intensity_density-1.0.0/shipping_night_light_intensity_density_2023_1_container.tif")

# Resolution only - make coarser
r_coarse <- resample_raster(r, new_resolution = 0.1)

# Extent only - crop to bounding box
r_crop <- resample_raster(r, new_extent = c(-75, -65, 40, 50))

# Both resolution and extent
r_both <- resample_raster(r, new_extent = c(-75, -65, 40, 50), new_resolution = 0.05)

# Match another raster exactly
r_match <- resample_raster(r, new_extent = other_raster, new_resolution = terra::res(other_raster))

# Use with sf polygon
r_sf <- resample_raster(r, new_extent = study_area_polygon, new_resolution = 0.01)
}

}
